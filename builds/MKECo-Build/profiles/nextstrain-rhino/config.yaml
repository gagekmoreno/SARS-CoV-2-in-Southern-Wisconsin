configfile:
  - config/config.yaml
  - profiles/nextstrain/builds.yaml

cores: 20
keep-going: True
printshellcmds: True
reason: True
restart-times: 1
stats: stats.json

# Custom settings for running builds on a SLURM cluster with DRMAA bindings.

# Wait a fixed number of seconds for missing files since the cluster file system
# can be quite slow and the workflow can fail unnecessarily due to this latency.
latency-wait: 60

# Use conda environments for augur and related binaries. This is important in a
# cluster environment where Docker is not available and Singularity may be
# prohibitively complicated to setup.
use-conda: True

# Cluster-specific settings for resources required by any rule. This file
# provides default resources for all rules and allows users to specify resources
# per rule by name. An important resource for the Hutch cluster is the requested
# "partition". Jobs submitted to the "restart" partition will start running
# almost immediately, but they may also be killed at any moment when someone
# else needs those resources. This is analogous to the spot resources on AWS.
cluster-config: profiles/nextstrain-rhino/cluster.json

# Submit jobs to the cluster with Python's DRMAA bindings instead of the SLURM
# sbatch command. The string associated with this key tells DRMAA how to connect
# cluster resources with those defined in the cluster config above. Jobs
# submitted with DRMAA will submit, finish, or die much faster than jobs
# submitted with sbatch because DRMAA does not use files on disk to track job
# status. This speed can be noticeable when running workflows with hundreds of
# jobs. More about DRMAA bindings here: https://pypi.org/project/drmaa/
drmaa: " -p {cluster.partition} --nodes=1 --ntasks=1 --mem={cluster.memory} --cpus-per-task={cluster.cores} --tmp={cluster.disk} --time={cluster.time}"

# Set the name for the job as display in the cluster queue.
jobname: "{rulename}.{jobid}.sh"

# Set the number of threads (cores, actually) that the tree rule or other rules
# should use on the cluster. These settings override the hardcoded values in the
# Snakemake rules. For the rhino cluster, it is difficult to get a node with
# more than 4 cores.
set-threads: tree=4
